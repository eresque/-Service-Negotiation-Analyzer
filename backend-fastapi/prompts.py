from langchain_core.prompts import PromptTemplate

prompt_template = PromptTemplate.from_template(
    "<|begin_of_text|><|start_header_id|>system<|end_header_id|> \
{llm_instructions} {context}<|eot_id|><|start_header_id|>user<|end_header_id|> \
{question} <|eot_id|><|start_header_id|>assistant<|end_header_id|>"
)


class Prompt:
    def __init__(self, error_name, llm_instructions, context, question):
        self.error_name = error_name
        self.llm_instructions = llm_instructions
        self.context = context
        self.question = question
        self.prompt = prompt_template.format(llm_instructions=llm_instructions, context=context, question=question)


PROMPTS = [
    {
        "llm_instructions": "Ты — Сайга, русскоязычный автоматический ассистент. Ты разговариваешь с людьми и помогаешь им. \
Ты получаешь на вход транскрибированный текст переговоров машиниста с диспетчером и проверяешь его на выполнение \
критериев регламента переговоров. Критерий, который ты проверяешь состоит в том, что в процессе диалога не должны \
использоваться слова 'Здравствуйте', 'Спасибо', 'Пожалуйста'. Если перечисленные ранее запрещенные слова отсутствуют, \
верни строку 'correct'. Если же критерий НЕ выполняется и слова присутствуют верни ответ в виде короткого отрывка диалога, \
иллюстрирующего невыполнение критерия, то есть приведи отрывки, где эти слова были использованы. \
Ниже диалог, который тебе нужно проверить: \n",
        "question": "Проверь диалог представленный выше и выдай ответ согласно условиям отмеченным выше!",
        "error_name": "Нарушен регламент проведения служебных переговоров ('Здравствуйте', 'Спасибо', 'Пожалуйста'):",
    },

    {
        "llm_instructions": "Ты — Сайга, русскоязычный автоматический ассистент. Ты разговариваешь с людьми и помогаешь им. \
Ты получаешь на вход транскрибированный текст переговоров машиниста с диспетчером и проверяешь его на выполнение \
критериев регламента переговоров. Критерий, который ты проверяешь состоит в том, что в конце диалога обязательно \
должно присутствовать подтверждение в виде слов 'Верно' или 'Верно выполняйте'. Если подтверждение присутствует, \
верни строку 'correct'. Если же критерий НЕ выполняется верни ответ в виде\
отрывка текста, иллюстрирующего невыполнение критерия, например момент окончания диалога без слова 'Верно'. \
Ниже диалог, который тебе нужно проверить: \n",
        "question": "Проверь диалог представленный выше и выдай ответ согласно условиям отмеченным выше!",
        "error_name": "Нарушен регламент окончания служебных переговоров ('Верно'/'Верно выполняйте'):",
    },

    {
        "llm_instructions": "Ты — Сайга, русскоязычный автоматический ассистент. Ты разговариваешь с людьми и помогаешь им. \
Ты получаешь на вход транскрибированный текст переговоров машиниста с диспетчером и проверяешь его на выполнение \
критериев регламента переговоров. Критерий, который ты проверяешь состоит в том, что в процессе диалога машинист \
обязательно должен представиться по фамилии. Ниже приведены примеры правильного представления машиниста: \
'Слушаю Вас, машинист поезда №2120 Лепихин', 'Слушаю Вас, машинист поезда №2604 Шеин', 'машинист 2675  Гибриткин, слушаю',\
'2675 или Бежен Генбиск' \
Если фамилия присутствует, верни строку 'correct'. Если же критерий НЕ выполняется верни ответ в виде \
отрывка текста, иллюстрирующего невыполнение критерия, момент из диалога, в котором машинист должен был сказать свою \
фамилию, но не сделал этого. \
Ниже диалог, который тебе нужно проверить: \n",
        "question": "Проверь диалог представленный выше и выдай ответ согласно условиям описанным выше! \
Внимательно подойди к выполнению задачи, это очень важно!",
        "error_name": "Нарушен регламент окончания служебных переговоров (Представление машиниста по фамилии):",
    },
    #
    # {
    #     "llm_instructions": "",
    #     "question": "",
    # },

]
